before:
  hooks:
    - go mod tidy
builds:
- env:
  - CGO_ENABLED=1
  binary: "{{ .ProjectName }}"
  goos:
  - linux
  goarch:
  - amd64
- id: arm
  flags:
  - -tags=musl
  ldflags:
  - -extldflags=-static
  env:
  - CGO_ENABLED=1
  - CC='zig cc -target aarch64-linux-musl'
  binary: "{{ .ProjectName }}"
  goos:
  - linux
  goarch:
  - arm64
dockers:
- image_templates:
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-amd64"
  use: buildx
  dockerfile: Dockerfile.x86_64
  goarch: amd64
  build_flag_templates:
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--platform=linux/amd64"
  extra_files:
    - assets/
- image_templates:
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-arm64v8"
  use: buildx
  goarch: arm64
  dockerfile: Dockerfile
  build_flag_templates:
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--platform=linux/arm64/v8"
  extra_files:
    - assets/
docker_manifests:
- name_template: "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}"
  image_templates:
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-amd64"
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-arm64v8"
- name_template: "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:latest"
  image_templates:
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-amd64"
  - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}:{{ .Version }}-arm64v8"
archives:
- format: zip
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
