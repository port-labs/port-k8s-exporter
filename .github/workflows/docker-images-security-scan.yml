name: Scan docker images

on:
  schedule:
    - cron: '0 0 * * *'  # Every day at midnight
  workflow_dispatch:

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "port-labs/port-k8s-exporter"

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache: true

      # https://stackoverflow.com/questions/51475992/cgo-cross-compiling-from-amd64linux-to-arm64linux/75368290#75368290
      - name: musl-cross for CGO Support
        run: |
          mkdir ../../musl-cross
          wget -P ~ https://musl.cc/aarch64-linux-musl-cross.tgz
          tar -xvf ~/aarch64-linux-musl-cross.tgz -C ../../musl-cross

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --skip publish --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE: ${{ env.IMAGE_NAME }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: trivy-vulnerability.txt

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy-vulnerability.txt ]]; then
            {
              echo "### Security Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat trivy-vulnerability.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

      - name: Set output for trivy results
        run: |
          cat trivy-vulnerability.txt
          cat trivy-vulnerability.txt | grep -i "total:" | awk '{print $2}'
          echo "VULNERABILITIES_COUNT=$(cat trivy-vulnerability.txt | grep -i "total:" | awk '{print $2}')" >> $GITHUB_ENV
          echo ${{ env.VULNERABILITIES_COUNT }}

      - name: Send slack alert if vulnerabilities found
        if: ${{ env.VULNERABILITIES_COUNT != '0' }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "Vulnerabilities found in `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest` image",
              "attachments": [
                {
                  "text": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest image has vulnerabilities",
                  "fields": [
                    {
                      "title": "Image",
                      "value": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest",
                      "short": true
                    },
                    {
                      "title": "Vulnerabilities",
                      "value": "Count: ${{ env.VULNERABILITIES_COUNT }}",
                      "short": true
                    },
                    {
                      "title": "link",
                      "value": "https://github.com/port-labs/port-agent/actions/runs/${{ github.run_id }}",
                      "short": true
                    }
                  ],

                  "color": "#FF0000"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RND_ECOSYSTEM_DEPENDABOT_ALERTS_WEBHOOK_URL }}